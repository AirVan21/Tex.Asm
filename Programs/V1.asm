		;можно почитать http://www.shikadi.net/moddingwiki/B800_Text
		model	tiny
		.code
		org	100h
_:		jmp	start

m1		db	'Hello, ASM!',13,10,'$'
l_m1		=	$-m1 	;$ - это смещение в том месте, где он стоит, = - это приcвоение переменной времени ассемблирования.
				;то есть в ячейку под меткой l_m1 запишется длина надписи на предыдущей строчке

start:		mov	ax,0B800h ; в B800:0000 у нас видео память лежит
		mov	es,ax ; ES:=B800
		xor	di,di ; DI:=0
		mov	si,offset m1
		cld	;DF := 0
		mov	cx,l_m1 ;cx = длина надписи.
	rep	movsb ;rep = repeat movsb, dec(CX) while CX<>0
		      ;movsb = (ES:DI) <- (DS:SI), if DF == 0: SI++,DI++ else SI--,DI--
		;Будет проблема, ибо напечатается не "Hello, ASM", а лишь часть символов, каждый которых разного цвета и выделен также разным цветом. То есть фокус в том, что символ в видеопамяти занимает не один байт, а 2. В первом байте код символа, во втором его атрибуты. (4 бита на цвет буквы, 4 бита на цвет выделения). Типы атрибутов можно посмотреть по ссылке сверху. То есть половина символов из нашей надписи распознается как атрибут, а не как код символа. 

		xor	ah,ah ;подождем нажатия любой клавиши
		int	16h
		ret
		end	_
