		model	tiny
		.code
		org	100h
_:		jmp	start

m1		db	'KBD bye!',13,10,'$'

i9:		push	ax      ;так как мы работаем с аппаратным прерыванием, а оно может произойти когда угодно (даже во время выполнения чего-то другого), то мы не должны вообще ничего попортить.
		in	al,60h      ;так мы считаем скан код из буфера клавиатуры
		cmp	al,1        ;1 - скан код esc 
		jne	_1          ;если нажато не esc, то не записываем его скан код
		mov	cs:f9,al    ;так как мы в обработчике аппаратного прерывания, ds может указывать куда угодно, поэтому обращаемся ко всему через cs:...
_1:		pop	ax
		db	0EAh        ;far jmp
v9		dd	0           ;тут будет адрес оригинального обработчика
f9		db	0

start:		mov	ax,3509h ;записываем адрес оригинального обработчика девятого инта в v9
		int	21h
		mov	word ptr v9,bx
		mov	word ptr v9+2,es

		mov	dx,offset i9 ;ставим наш обработчик
		mov	ax,2509h
		int	21h

_c:		cmp	f9,1         ;если был нажат esc, то в f9 единица
		jne	_c           ;пока не будет нажат esc мы будем сидеть в цикле

		push	ds      ;возвращаем оригинальный обработчик
		lds	dx,v9       ;в ds - cегмент, в dx смещение v9
		mov	ax,2509h
		int	21h
		pop	ds

		mov	dx,offset m1 ;прощаемся с нашим обработчиком (печатаем KBD bye!)
		mov	ah,9
		int	21h
		ret

h2:		push	ax ;тут печатаем
		shr	al,4
		call	h1
		pop	ax
h1:		push	ax
		and	al,0Fh
		cmp	al,10
		sbb	al,69h
		das
		stosb
		pop	ax
		ret

		end	_
